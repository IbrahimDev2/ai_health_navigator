{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/src/lib/firebase/admin.ts"],"sourcesContent":["\nimport admin from 'firebase-admin';\n\n// Check if the app is already initialized to prevent errors\nif (!admin.apps.length) {\n  // Get the service account key from environment variables\n  const serviceAccount = JSON.parse(\n    process.env.FIREBASE_SERVICE_ACCOUNT_KEY as string\n  );\n\n  admin.initializeApp({\n    credential: admin.credential.cert(serviceAccount),\n  });\n}\n\n// Export the initialized admin SDK\nconst adminDb = admin.firestore();\n\nexport { admin, adminDb };\n"],"names":[],"mappings":";;;;AACA;;AAEA,4DAA4D;AAC5D,IAAI,CAAC,sIAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IACtB,yDAAyD;IACzD,MAAM,iBAAiB,KAAK,KAAK,CAC/B,QAAQ,GAAG,CAAC,4BAA4B;IAG1C,sIAAK,CAAC,aAAa,CAAC;QAClB,YAAY,sIAAK,CAAC,UAAU,CAAC,IAAI,CAAC;IACpC;AACF;AAEA,mCAAmC;AACnC,MAAM,UAAU,sIAAK,CAAC,SAAS","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/src/app/api/history/route.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\nimport { admin, adminDb } from '@/lib/firebase/admin';\n\nexport async function GET(req: NextRequest) {\n  try {\n    // 1. User ko Authenticate karna (bilkul diagnose API ki tarah)\n    const authorization = req.headers.get('Authorization');\n    if (!authorization || !authorization.startsWith('Bearer ')) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n    const idToken = authorization.split('Bearer ')[1];\n\n    let decodedToken;\n    try {\n      decodedToken = await admin.auth().verifyIdToken(idToken);\n    } catch (error) {\n      console.error(\"Error verifying token:\", error);\n      return NextResponse.json({ error: 'Invalid token' }, { status: 403 });\n    }\n\n    const uid = decodedToken.uid;\n\n    // 2. Firestore se user ke diagnoses fetch karna\n    const historySnapshot = await adminDb\n      .collection('diagnoses')\n      .where('userId', '==', uid) // Sirf is user ke documents\n      .orderBy('createdAt', 'desc') // Naye se purane ki tartib me\n      .get();\n\n    // 3. Documents ko readable format me tabdeel karna\n    const history = historySnapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n            id: doc.id, // Document ID\n            symptoms: data.symptoms,\n            diagnosis: data.diagnosis,\n            // Timestamp ko ISO string me convert kar rahe hain taake client par आसानी se parse ho\n            createdAt: data.createdAt.toDate().toISOString(), \n        };\n    });\n\n    // 4. User ko history wapis bhejna\n    return NextResponse.json(history);\n\n  } catch (error) {\n    console.error(\"Error fetching diagnosis history: \", error);\n    return NextResponse.json({ error: 'Failed to fetch history. Please try again later.' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,+DAA+D;QAC/D,MAAM,gBAAgB,IAAI,OAAO,CAAC,GAAG,CAAC;QACtC,IAAI,CAAC,iBAAiB,CAAC,cAAc,UAAU,CAAC,YAAY;YAC1D,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QACA,MAAM,UAAU,cAAc,KAAK,CAAC,UAAU,CAAC,EAAE;QAEjD,IAAI;QACJ,IAAI;YACF,eAAe,MAAM,wKAAK,CAAC,IAAI,GAAG,aAAa,CAAC;QAClD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,MAAM,MAAM,aAAa,GAAG;QAE5B,gDAAgD;QAChD,MAAM,kBAAkB,MAAM,4JAAO,CAClC,UAAU,CAAC,aACX,KAAK,CAAC,UAAU,MAAM,KAAK,4BAA4B;SACvD,OAAO,CAAC,aAAa,QAAQ,8BAA8B;SAC3D,GAAG;QAEN,mDAAmD;QACnD,MAAM,UAAU,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAA;YACrC,MAAM,OAAO,IAAI,IAAI;YACrB,OAAO;gBACH,IAAI,IAAI,EAAE;gBACV,UAAU,KAAK,QAAQ;gBACvB,WAAW,KAAK,SAAS;gBACzB,sFAAsF;gBACtF,WAAW,KAAK,SAAS,CAAC,MAAM,GAAG,WAAW;YAClD;QACJ;QAEA,kCAAkC;QAClC,OAAO,gJAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAmD,GAAG;YAAE,QAAQ;QAAI;IACxG;AACF","debugId":null}}]
}