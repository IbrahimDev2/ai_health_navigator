{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/ai_health_navigator/src/lib/firebase.ts"],"sourcesContent":["'use client';\n// Zaroori Firebase SDKs ko import karo\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\"; // Authentication service ke liye\nimport { getFirestore } from \"firebase/firestore\"; // Firestore Database service ke liye\n\n// Aapke web app ki Firebase configuration\n// YEH KEYS AB .env.local FILE SE AA RAHI HAIN (MEHFOOZ TARIQA)\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID\n};\n\n// Firebase ko initialize karo\nlet app;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\n// Services ko initialize karo aur 'export' karo taake woh poore app me use ho sakein.\nexport const auth = getAuth(app); \nexport const db = getFirestore(app);\n"],"names":[],"mappings":";;;;;;AACA,uCAAuC;AACvC;AAAA;AACA,oUAAyC,iCAAiC;AAA1E;AACA,8UAAmD,qCAAqC;AAAxF;AAJA;;;;AAMA,0CAA0C;AAC1C,+DAA+D;AAC/D,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,8BAA8B;AAC9B,IAAI;AACJ,IAAI,CAAC,IAAA,kMAAO,IAAG,MAAM,EAAE;IACrB,MAAM,IAAA,wMAAa,EAAC;AACtB,OAAO;IACL,MAAM,IAAA,kMAAO,GAAE,CAAC,EAAE;AACpB;AAGO,MAAM,OAAO,IAAA,oMAAO,EAAC;AACrB,MAAM,KAAK,IAAA,wMAAY,EAAC","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/ai_health_navigator/src/components/AuthProvider.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, createContext, useContext, ReactNode } from 'react';\nimport { onAuthStateChanged, User, signInWithPopup, GoogleAuthProvider, signOut } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\n\n// Context ka type define kar rahe hain\n// Isme user, loading state, aur sign-in/sign-out functions shamil hain\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  handleSignIn: () => void;\n  handleSignOut: () => void;\n}\n\n// Default values ke sath context create kar rahe hain\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  handleSignIn: () => {},\n  handleSignOut: () => {},\n});\n\n// Provider component jo poori app ko wrap karega\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Google Sign-In ka function\n  const handleSignIn = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      // onAuthStateChanged isko automatically handle kar lega\n    } catch (error) {\n      console.error(\"Error signing in with Google: \", error);\n    }\n  };\n\n  // Sign-Out ka function\n  const handleSignOut = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(\"Error signing out: \", error);\n    }\n  };\n\n  // Yeh useEffect user ke login status ko sunta rehta hai\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      setLoading(false);\n    });\n\n    // Component unmount hone par listener ko saaf karta hai\n    return () => unsubscribe();\n  }, []);\n\n  // Context ki value tayyar kar rahe hain\n  const value = {\n    user,\n    loading,\n    handleSignIn,\n    handleSignOut,\n  };\n  \n  // Yahan se loading screen hata di gayi hai\n  // Ab yeh provider bachon (children) ko render hone se nahi rokega\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n// Custom hook taake context ko aasani se istemal kiya ja sake\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAeA,sDAAsD;AACtD,MAAM,4BAAc,IAAA,6OAAa,EAAkB;IACjD,MAAM;IACN,SAAS;IACT,cAAc,KAAO;IACrB,eAAe,KAAO;AACxB;AAGO,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,wOAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,wOAAQ,EAAC;IAEvC,6BAA6B;IAC7B,MAAM,eAAe;QACnB,MAAM,WAAW,IAAI,+MAAkB;QACvC,IAAI;YACF,MAAM,IAAA,4MAAe,EAAC,qJAAI,EAAE;QAC5B,wDAAwD;QAC1D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD;IACF;IAEA,uBAAuB;IACvB,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,IAAA,oMAAO,EAAC,qJAAI;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;QACvC;IACF;IAEA,wDAAwD;IACxD,IAAA,yOAAS,EAAC;QACR,MAAM,cAAc,IAAA,+MAAkB,EAAC,qJAAI,EAAE,CAAC;YAC5C,QAAQ;YACR,WAAW;QACb;QAEA,wDAAwD;QACxD,OAAO,IAAM;IACf,GAAG,EAAE;IAEL,wCAAwC;IACxC,MAAM,QAAQ;QACZ;QACA;QACA;QACA;IACF;IAEA,2CAA2C;IAC3C,kEAAkE;IAClE,qBACE,qQAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;AAGO,MAAM,UAAU;IACrB,OAAO,IAAA,0OAAU,EAAC;AACpB","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/ai_health_navigator/src/app/layout.tsx"],"sourcesContent":["'use client'; // <-- YEH FIX HAI!\n\nimport type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\n\n// Import the AuthProvider\nimport { AuthProvider } from '@/components/AuthProvider';\n\n// Google Fonts ko setup kar rahe hain taake poori website me aek jaisa font استعمال ho\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\n// YEH WEBSITE KA SEO METADATA HAI.\n// Yeh Google search results aur browser tab me show hota hai.\n// NOTE: Metadata Client Components me kaam nahi karti, lekin hum isay yahan chor rahe hain.\n// Iska behtar hal Next.js ke naye features me hai, فی الحال isay chaltay rehne dein.\n// export const metadata: Metadata = {\n//   title: \"AI Health Navigator\",\n//   description: \"Your personal AI-powered health assistant\",\n// };\n\n// Yeh RootLayout poori website ka \"Master Template\" ya \"Frame\" hai.\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {/* Wrap the entire application with the AuthProvider */}\n        <AuthProvider>\n          {children}\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAMA,0BAA0B;AAC1B;AAPA,cAAc,mBAAmB;;;;;;AA8BlB,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,qQAAC;QAAK,MAAK;kBACT,cAAA,qQAAC;YACC,WAAW,GAAG,oJAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,yJAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAGpE,cAAA,qQAAC,yKAAY;0BACV;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}