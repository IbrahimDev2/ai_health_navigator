{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts","turbopack:///[project]/node_modules/next/src/client/components/handle-isr-error.tsx","turbopack:///[project]/node_modules/next/src/client/components/builtin/global-error.tsx","turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/src/app/auth/action/PasswordResetForm.tsx"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactServerDOMTurbopackClient\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactDOM\n","const workAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n      ).workAsyncStorage\n    : undefined\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nexport function HandleISRError({ error }: { error: any }) {\n  if (workAsyncStorage) {\n    const store = workAsyncStorage.getStore()\n    if (store?.isRevalidate || store?.isStaticGeneration) {\n      console.error(error)\n      throw error\n    }\n  }\n\n  return null\n}\n","'use client'\n\nimport { HandleISRError } from '../handle-isr-error'\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type GlobalErrorComponent = React.ComponentType<{\n  error: any\n}>\nfunction DefaultGlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              Application error: a {digest ? 'server' : 'client'}-side exception\n              has occurred while loading {window.location.hostname} (see the{' '}\n              {digest ? 'server logs' : 'browser console'} for more\n              information).\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default DefaultGlobalError\n","module.exports = require('./dist/client/components/navigation')\n","'use client';\n\nimport { useState } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { confirmPasswordReset } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport Link from 'next/link';\n\n// ShadCN UI Components\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n\nexport default function PasswordResetForm() {\n  const searchParams = useSearchParams();\n  \n  const oobCode = searchParams.get('oobCode');\n\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [message, setMessage] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  if (!oobCode) {\n    return (\n        <div className=\"flex min-h-screen flex-col items-center justify-center bg-gray-50 dark:bg-gray-900 p-4\">\n            <Card className=\"w-full max-w-md\">\n                <CardHeader className=\"text-center\">\n                    <CardTitle className=\"text-2xl font-bold\">Invalid Link</CardTitle>\n                </CardHeader>\n                <CardContent className=\"text-center\">\n                    <p className=\"text-red-500 mb-4\">The password reset link is missing necessary information.</p>\n                    <Link href=\"/forgot-password\"><Button variant=\"outline\">Request a New Link</Button></Link>\n                </CardContent>\n            </Card>\n        </div>\n    );\n  }\n\n  const handleResetSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setMessage(null);\n    setIsLoading(true);\n\n    if (newPassword !== confirmNewPassword) {\n      setError(\"Passwords do not match.\");\n      setIsLoading(false);\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError(\"Password should be at least 6 characters long.\");\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      await confirmPasswordReset(auth, oobCode, newPassword);\n      setMessage(\"Your password has been reset successfully! You can now log in with your new password.\");\n    } catch (err: any) {\n      console.error(\"Error resetting password:\", err);\n      if (err.code === 'auth/expired-action-code') {\n        setError(\"This password reset link has expired. Please request a new one.\");\n      } else {\n        setError(\"Failed to reset password. The link might be invalid or already used.\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gray-50 dark:bg-gray-900 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold\">Set a New Password</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {message ? (\n            <div className=\"text-center\">\n              <p className=\"text-green-600 mb-4\">{message}</p>\n              <Link href=\"/login\" passHref>\n                <Button>Go to Login</Button>\n              </Link>\n            </div>\n          ) : (\n            <form onSubmit={handleResetSubmit} className=\"space-y-4\">\n              <CardDescription>Please enter and confirm your new password.</CardDescription>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"new-password\">New Password</Label>\n                <Input\n                  id=\"new-password\"\n                  type=\"password\"\n                  required\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"confirm-new-password\">Confirm New Password</Label>\n                <Input\n                  id=\"confirm-new-password\"\n                  type=\"password\"\n                  required\n                  value={confirmNewPassword}\n                  onChange={(e) => setConfirmNewPassword(e.target.value)}\n                />\n              </div>\n              {error && (\n                <p className=\"text-red-500 text-sm font-medium text-center\">{error}</p>\n              )}\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading ? 'Resetting...' : 'Reset Password'}\n              </Button>\n            </form>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":["module","exports","require","vendored","AppRouterContext","HooksClientContext","ServerInsertedHtml","ReactServerDOMTurbopackClient","ReactDOM","HandleISRError","workAsyncStorage","window","undefined","error","store","getStore","isRevalidate","isStaticGeneration","console","styles","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","text","fontSize","fontWeight","lineHeight","margin","DefaultGlobalError","digest","html","id","head","body","div","style","h2","location","hostname","p"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7]}