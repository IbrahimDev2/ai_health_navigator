{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/new_project/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/user/ai_health_navigator/new_project/src/app/doctors/search/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useSearchParams } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useEffect, useState, useCallback } from 'react';\nimport { collection, query, where, getDocs, doc, writeBatch, Timestamp, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { useAuth } from '@/components/AuthProvider';\n\ninterface Doctor {\n  id: string;\n  name: string;\n  specialty: string;\n  location: string;\n  availability: string;\n  slots?: { time: string; booked: boolean }[];\n}\n\ninterface Appointment {\n  userId: string;\n  doctorId: string;\n  doctorName: string;\n  specialty: string;\n  appointmentTime: string;\n  createdAt: Timestamp;\n}\n\nexport default function DoctorSearchPage() {\n  const searchParams = useSearchParams();\n  const specialist = searchParams.get('specialist');\n  const { user } = useAuth();\n\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [bookingState, setBookingState] = useState<{ doctorId: string | null; slot: string | null; loading: boolean; error: string | null }>({\n    doctorId: null,\n    slot: null,\n    loading: false,\n    error: null,\n  });\n\n  const fetchDoctors = useCallback(async () => {\n    if (!specialist) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const doctorsRef = collection(db, 'doctors');\n      const q = query(doctorsRef, where(\"specialty\", \"==\", specialist));\n      const querySnapshot = await getDocs(q);\n      const fetchedDoctors: Doctor[] = [];\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        const dummySlots = [\n            { time: \"09:00 AM\", booked: Math.random() > 0.5 },\n            { time: \"10:00 AM\", booked: Math.random() > 0.5 },\n            { time: \"11:00 AM\", booked: Math.random() > 0.5 },\n            { time: \"02:00 PM\", booked: false },\n        ];\n\n        fetchedDoctors.push({ \n            id: doc.id, \n            ...data,\n            slots: dummySlots\n        } as Doctor);\n      });\n      setDoctors(fetchedDoctors);\n    } catch (err) {\n      console.error(\"Error fetching doctors: \", err);\n      if ((err as any).code === 'failed-precondition' || (err as any).message.includes('firestore')) {\n         setError(\"Could not connect to the doctor database. Please ensure it is set up correctly.\");\n      } else {\n         setError(\"Failed to fetch doctors. Please try again later.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [specialist]);\n\n  useEffect(() => {\n    fetchDoctors();\n  }, [fetchDoctors]);\n\n  const handleBookAppointment = async (doctorId: string, slotTime: string) => {\n      if (!user) {\n          alert(\"Please log in to book an appointment.\");\n          return;\n      }\n\n      setBookingState({ doctorId, slot: slotTime, loading: true, error: null });\n\n      try {\n          await new Promise(resolve => setTimeout(resolve, 2000));\n\n          const doctor = doctors.find(d => d.id === doctorId);\n          const slot = doctor?.slots?.find(s => s.time === slotTime);\n          if (slot?.booked) {\n              throw new Error(\"This slot is already booked or no longer available.\");\n          }\n\n          alert(`Booking successful!\\n\\nDoctor ID: ${doctorId}\\nTime: ${slotTime}\\n\\nThis is a simulation. No data was saved to the database.`);\n          \n          setBookingState({ doctorId: null, slot: null, loading: false, error: null });\n          setDoctors(prevDoctors => prevDoctors.map(d => {\n              if (d.id === doctorId) {\n                  const newSlots = d.slots?.map(s => s.time === slotTime ? { ...s, booked: true } : s);\n                  return { ...d, slots: newSlots };\n              }\n              return d;\n          }));\n\n      } catch (error: any) {\n          setBookingState({ doctorId, slot: slotTime, loading: false, error: error.message });\n      }\n  };\n\n  return (\n    // The outer 'main' tag with 'min-h-screen' has been removed.\n    // The content is now rendered within the structure provided by layout.tsx.\n    <div className=\"w-full max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-2 text-center text-blue-400\">Find a Doctor</h1>\n      <p className=\"text-center text-lg text-gray-300 mb-6\">\n        Showing results for: <span className=\"font-semibold\">{specialist || 'N/A'}</span>\n      </p>\n\n      {loading && <p className=\"text-center py-10\">Finding doctors...</p>}\n      \n      {error && <p className=\"text-center text-red-500 py-10\">{error}</p>}\n\n      {!loading && !error && doctors.length > 0 && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {doctors.map(doctor => (\n            <Card key={doctor.id} className=\"bg-gray-800 border-gray-700 flex flex-col\">\n              <CardHeader>\n                <CardTitle className=\"text-xl text-white\">{doctor.name}</CardTitle>\n                <p className=\"text-sm text-blue-300 pt-1\">{doctor.specialty}</p>\n              </CardHeader>\n              <CardContent className=\"space-y-4 flex-grow flex flex-col justify-between\">\n                <div>\n                  <p className=\"text-gray-400\"><strong>Location:</strong> {doctor.location}</p>\n                  <p className=\"text-gray-400 mt-2\"><strong>Available Slots:</strong></p>\n                  <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                      {doctor.slots?.map(slot => (\n                          <Button \n                              key={slot.time}\n                              variant=\"outline\"\n                              disabled={slot.booked || (bookingState.loading && bookingState.doctorId === doctor.id && bookingState.slot === slot.time)}\n                              onClick={() => handleBookAppointment(doctor.id, slot.time)}\n                              className={`\n                                  ${slot.booked ? \"bg-red-900 text-gray-500 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700\"}\n                                  ${bookingState.doctorId === doctor.id && bookingState.slot === slot.time ? \"bg-yellow-500\" : \"\"}\n                              `}\n                          >\n                              {bookingState.loading && bookingState.doctorId === doctor.id && bookingState.slot === slot.time ? \"Booking...\" : slot.time}\n                          </Button>\n                      ))}\n                  </div>\n                </div>\n                {bookingState.error && bookingState.doctorId === doctor.id && (\n                    <p className=\"text-red-400 text-sm mt-2 text-center\">{bookingState.error}</p>\n                )}\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {!loading && !error && doctors.length === 0 && (\n        <div className=\"text-center py-10\">\n          <p className=\"text-lg text-gray-400\">No doctors found for this specialty at the moment.</p>\n          <p className=\"text-sm text-gray-500 mt-2\">Please check your spelling or try another specialty.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}